/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.50
 * Generated at: 2020-05-15 08:38:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.mvc;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class mvcApp3_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/D:/github/MYbatisBasic/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/web/WEB-INF/lib/standard-1.1.2.jar!/META-INF/c-1_0-rt.tld", Long.valueOf(1098678690000L));
    _jspx_dependants.put("/WEB-INF/lib/standard-1.1.2.jar", Long.valueOf(1589019112670L));
    _jspx_dependants.put("jar:file:/D:/github/MYbatisBasic/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/web/WEB-INF/lib/standard-1.1.2.jar!/META-INF/fn.tld", Long.valueOf(1098678690000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"EUC-KR\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\r\n");
      out.write("  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\" https://code.jquery.com/jquery-3.5.0.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">    \r\n");
      out.write("     $(function(){\r\n");
      out.write("    \t \r\n");
      out.write("    \t $(\"#tHead\").hide();\r\n");
      out.write("    \t $(\"input#id\").focus(function(){\r\n");
      out.write("    \t\t//$(\"div\").text(''); \r\n");
      out.write("    \t });\r\n");
      out.write("    \t $(\"#button\").click(function(){\r\n");
      out.write("    \t\t \r\n");
      out.write("    \t\tif($(\"input#id\").val().length==0||$(\"textarea#contents\").val().length==0){\r\n");
      out.write("    \t\t\t$(\"#msg\").html(\"<font color=red>내용을입력하세요.</font>\");\r\n");
      out.write("    \t\t\treturn false;\r\n");
      out.write("    \t\t}else{\r\n");
      out.write("    \t\t\t$.ajax({\r\n");
      out.write("    \t\t\t\turl:'/web/ajaxResult.do?cmd=ajaxResult',\r\n");
      out.write("    \t\t\t\tdataType:'json',\t\t\r\n");
      out.write("    \t\t\t\ttype:'POST',\r\n");
      out.write("    \t\t\t\t//data:{id:$(\"input#id\").val(),contents:$(\"textarea#contents\").val()},\r\n");
      out.write("    \t\t\t\tdata:$(\"form\").serialize(),\r\n");
      out.write("    \t\t\t\tsuccess:function(v){\r\n");
      out.write("    \t\t\t\t\t//alert('test');\r\n");
      out.write("    \t\t\t\t\t$(\"form\").trigger(\"reset\");\r\n");
      out.write("    \t\t\t\t \t$(\"#tHead\").show(500);\r\n");
      out.write("    \t\t\t\t \t$(\"#tb tr\").remove();\r\n");
      out.write("    \t\t\t\t\t$(v).each(function(index,dom){\r\n");
      out.write("    \t\t\t\t\t//alert(dom.no+' '+dom.i);\r\n");
      out.write("    \t\t\t\t\t\t$(\"#tb\").append(\"<tr><td>\"+dom.no+\"</td><td>\"+dom.i+\"</td><td>\"+dom.contents+\"</td><td>\"+dom.regdate+\"</td><td><button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Mod</button></td><td><button type=\\\"button\\\" class=\\\"btn btn-primary\\\">DEL</button></td> </tr>\");\r\n");
      out.write("    \t\t\t\t});\t\r\n");
      out.write("    \t\t\t\t\t$(\"#tb\").fadeIn(1000);\r\n");
      out.write("    \t\t\t\t},error:function(){\r\n");
      out.write("    \t\t\t\t\talert('error');\r\n");
      out.write("    \t\t\t\t}    \t\t\t\t\r\n");
      out.write("    \t\t\t});\r\n");
      out.write("    \t\t}\r\n");
      out.write("    \t });    \t\r\n");
      out.write("     });\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("   <!-- <form action=\"\" name=\"ajaxCrud\">\r\n");
      out.write("       <input type=\"text\" id=\"id\" name=\"id\"><input type=\"button\" value=\"덧글\"><br>\r\n");
      out.write("       <textarea rows=\"5\" cols=\"30\" id=\"contents\" name=\"contents\"></textarea>\r\n");
      out.write("   </form>   \r\n");
      out.write("   <div id=\"dvMain\">List</div> -->\r\n");
      out.write("   \r\n");
      out.write("   <!--  -->\r\n");
      out.write("   \r\n");
      out.write("   <div class=\"container\">\r\n");
      out.write("  <h2>Reply Form</h2>\r\n");
      out.write("  <form class=\"form-inline\" name=\"ajaxCrud\">\r\n");
      out.write("    <div class=\"form-group\">\r\n");
      out.write("      <label for=\"id\">ID:</label>\r\n");
      out.write("      <input type=\"text\" class=\"form-control\" id=\"id\" placeholder=\"Enter id\" name=\"id\">\r\n");
      out.write("    </div>   \r\n");
      out.write("    <button type=\"button\" id=\"button\" class=\"btn btn-default\">등록</button><br>\r\n");
      out.write("    <div class=\"form-group\">      \r\n");
      out.write("      <textarea rows=\"5\" cols=\"100\" id=\"contents\" name=\"contents\"></textarea>\r\n");
      out.write("    </div> \r\n");
      out.write("  </form>\r\n");
      out.write("  <div id=\"msg\"></div>\r\n");
      out.write("<table class=\"table\" style=\"width: 60%;\">\r\n");
      out.write("    <thead id=\"tHead\">\r\n");
      out.write("      <tr>\r\n");
      out.write("        <th>NO</th>\r\n");
      out.write("        <th>ID</th>\r\n");
      out.write("        <th>CONTENTS</th>\r\n");
      out.write("        <th>REGDATE</th>        \r\n");
      out.write("        <th>STATE</th>        \r\n");
      out.write("      </tr>\r\n");
      out.write("    </thead>\r\n");
      out.write("    <tbody id=\"tb\">      \r\n");
      out.write("    </tbody>\r\n");
      out.write("</table>   \r\n");
      out.write("</div>\r\n");
      out.write("   \r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
